-- Ficha 5

-- Exercicio 2
CREATE TABLE LIVROS_REMOVIDOS
   (	CODIGO_LIVRO NUMBER(4,0) NOT NULL ENABLE, 
	TITULO VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	ISBN VARCHAR2(13 BYTE) NOT NULL ENABLE, 
	GENERO VARCHAR2(20 BYTE), 
	PRECO_TABELA NUMBER(8,2), 
	PAGINAS NUMBER(6,0), 
	QUANT_EM_STOCK NUMBER(9,0), 
	UNIDADES_VENDIDAS NUMBER(9,0), 
	DATA_EDICAO DATE);
/

-- Exercicio 3  
CREATE OR REPLACE TRIGGER F05_03
    AFTER DELETE ON LIVROS
    FOR EACH ROW 
DECLARE
BEGIN
  INSERT INTO LIVROS_REMOVIDOS VALUES (
    :OLD.CODIGO_LIVRO,
    :OLD.TITULO,
    :OLD.ISBN,
    :OLD.GENERO,
    :OLD.PRECO_TABELA,
    :OLD.PAGINAS,
    :OLD.QUANT_EM_STOCK,
    :OLD.UNIDADES_VENDIDAS,
    :OLD.DATA_EDICAO);
END;
/

-- Exercicio 4
ALTER TABLE LIVROS_REMOVIDOS
ADD (UTILIZADOR VARCHAR2(40), DATA_REMOCAO DATE);
/
-- Exercicio 5

CREATE OR REPLACE TRIGGER F05_05
    AFTER DELETE ON LIVROS
    FOR EACH ROW 
DECLARE
BEGIN
  INSERT INTO LIVROS_REMOVIDOS VALUES (
    :OLD.CODIGO_LIVRO,
    :OLD.TITULO,
    :OLD.ISBN,
    :OLD.GENERO,
    :OLD.PRECO_TABELA,
    :OLD.PAGINAS,
    :OLD.QUANT_EM_STOCK,
    :OLD.UNIDADES_VENDIDAS,
    :OLD.DATA_EDICAO,
    USER,
    SYSDATE);
END;
/

-- Exercicio 6

ALTER TABLE EDITORAS
ADD NLIVROS_EDITADOS NUMBER(5);

UPDATE EDITORAS SET NLIVROS_EDITADOS = (SELECT COUNT(CODIGO_LIVRO) 
FROM LIVROS WHERE EDITORAS.CODIGO_EDITORA = LIVROS.CODIGO_EDITORA); 
/

-- Exercicio 7

CREATE OR REPLACE TRIGGER F05_EX07
AFTER INSERT OR DELETE OR UPDATE OF CODIGO_EDITORA
    ON LIVROS
    FOR EACH ROW
DECLARE
BEGIN
    IF INSERTING OR UPDATING THEN
        UPDATE EDITORAS SET NLIVROS_EDITADOS = NLIVROS_EDITADOS + 1
        WHERE EDITORAS.CODIGO_EDITORA = :NEW.CODIGO_EDITORA;
    END IF;
    IF DELETING OR UPDATING THEN
        UPDATE EDITORAS SET NLIVROS_EDITADOS = NLIVROS_EDITADOS - 1
        WHERE EDITORAS.CODIGO_EDITORA = :OLD.CODIGO_EDITORA;
    END IF;
END;
/

-- Exercicio 8
CREATE TABLE FICHA5 (
  NUM1 NUMBER,
  NUM2 NUMBER,
  NUM3 NUMBER,
  NUM4 NUMBER,
  STRING1 VARCHAR2(100),
  STRING2 VARCHAR(1000)
);
/
-- Exercicio 9

CREATE OR REPLACE PROCEDURE F05_EX09
IS
BEGIN
    DELETE FROM FICHA5;
    
    SELECT TITULO, QUANT_EM_STOCK, SOMA, SOMA_MES
    FROM LIVROS,
      (SELECT CODIGO_LIVRO, SUM(QUANTIDADE) SOMA)
        FROM VENDAS V
        GROUP BY CODIGO_LIVRO) T,
      (SELECT CODIGO_LIVRO, SUM(QUANTIDADE) SOMA_MES
        FROM VENDAS V
        WHERE TO_CHAR(DATA_VENDA, 'YYYY-MM') = TO_CHAR(ADD_MONTHS(SYSDATE, -1), 'YYYY-MM')
        GROUP BY CODIGO_LIVRO) M
    WHERE L.CODIGO_LIVRO = T.CODIGO_LIVRO (+)
    AND L.CODIGO_LIVRO = M.CODIGO_LIVRO (+)
END;
/
CALL F05_EX09();

-- Exercicio 9 versao simoes
CREATE OR REPLACE PROCEDURE F05_EX09
IS
    CURSOR C1 IS
        SELECT TITULO, QUANT_EM_STOCK, SUM(QUANTIDADE) quant,SUM(QUANTIDADE*PRECO_TABELA)-SUM(QUANTIDADE*PRECO_UNITARIO) RECEITA,
            (SELECT NVL(SUM(QUANTIDADE),0) SOMA_MES FROM VENDAS V
            WHERE V.CODIGO_LIVRO = LIVROS.CODIGO_LIVRO AND TO_CHAR(DATA_VENDA,'YYYY-MM') = TO_CHAR(add_months(SYSDATE,-1),'YYYY-MM')) MES
        FROM LIVROS, VENDAS WHERE LIVROS.CODIGO_LIVRO = VENDAS.CODIGO_LIVRO GROUP BY TITULO, QUANT_EM_STOCK;
BEGIN
    DELETE FROM FICHA5;
    FOR r in C1
        LOOP
            INSERT INTO FICHA5 VALUES(r.quant_em_stock,r.quant,r.mes,r.receita,r.titulo,NULL);
        END LOOP;
END;
/
CALL F05_EX09();

-- Exercicio 10

CREATE TRIGGER F05_EX10
  AFTER INSERT ON VENDAS
  FOR EACH ROW
BEGIN
  
END;
















