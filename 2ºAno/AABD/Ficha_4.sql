-- Exercicio 8
CREATE OR REPLACE FUNCTION F03_EX08 (CODA NUMBER)
  RETURN VARCHAR
  IS
    NOME_AUTOR AUTORES.NOME%TYPE;
BEGIN
  SELECT SUBSTR(NOME, 1, INSTR(NOME, ' ') -1) INTO NOME_AUTOR FROM AUTORES WHERE CODIGO_AUTOR = CODA;
  RETURN NOME_AUTOR;
EXCEPTION
  WHEN NO_DATA_FOUND THEN
    RAISE_APPLICATION_ERROR(-20302, 'CODIGO DE AUTOR INEXISTENTE');
END;
/
SELECT F03_EX08(2) FROM DUAL;

-- Exercicio 9
CREATE OR REPLACE FUNCTION F03_EX09 (CODA NUMBER)
  RETURN NUMBER
  IS
    NLIVROS NUMBER;
BEGIN
  SELECT COUNT(CODIGO_LIVRO) INTO NLIVROS FROM LIVROS WHERE  CODIGO_AUTOR = CODA;
  IF (NLIVROS = 0) THEN
    RAISE_APPLICATION_ERROR(-20304, 'O autor com o código ' || CODA || ' não escreveu livros');
  END IF;    
  RETURN NLIVROS;
END;
/
SELECT F03_EX09(2) FROM DUAL;

-- Exercicio 10
CREATE OR REPLACE PROCEDURE F03_EX10(cod1 NUMBER, cod2 NUMBER)
IS

  EX2 EXCEPTION;
  PRAGMA EXCEPTION_INIT(EX2, -20302);
  EX4 EXCEPTION;
  PRAGMA EXCEPTION_INIT(EX4, -20304);
  
BEGIN
    FOR r in cod1..cod2
    LOOP
        INSERT INTO TEMP VALUES (r,F03_EX09(r),F03_EX08(r));
    END LOOP;
EXCEPTION
    WHEN EX2 THEN
      RAISE_APPLICATION_ERROR(-20302, 'CODIGO DE AUTOR INEXISTENTE');
    WHEN EX4 THEN
      RAISE_APPLICATION_ERROR(-20304, 'O AUTOR NAO EXCREVEU LIVROS');
END;
/
CALL F03_EX10(2,3);

-- Ficha 4
--Exercício 5
CREATE OR REPLACE PROCEDURE F04_EX05
IS
  precototal NUMBER;
  nlivros NUMBER;
  
  CURSOR c1 IS
    SELECT SUM(preco_tabela) precototal, COUNT(codigo_livro)nlivros, genero FROM livros
    GROUP BY genero;
BEGIN 
    DELETE FROM temp;
    FOR i IN c1 
    LOOP
      INSERT INTO temp VALUES(i.precototal, i.nlivros, i.genero);
    END LOOP;
END;
/  
CALL F04_EX05();

--Exercício 6 versao comando
CREATE TRIGGER F04_EX06
  AFTER INSERT OR DELETE OR UPDATE OF PRECO_TABELA, GENERO
  ON LIVROS
DECLARE
BEGIN
  F04_EX05;
END;

-- Exercicio 6 versao linha
CREATE OR REPLACE TRIGGER F04_EX06
  AFTER INSERT OR DELETE OR UPDATE OF PRECO_TABELA, GENERO
  ON LIVROS
  FOR EACH ROW
DECLARE
BEGIN
  IF INSERTING THEN
    UPDATE TEMP SET COL1 = COL1 +1, COL2 = COL2 + :NEW.PRECO_TABELA
    WHERE MESSAGE = :NEW.GENERO;
    END IF;
  IF DELETING THEN
    UPDATE TEMP SET COL1 = COL1 - 1, COL2 = COL2 - :OLD.PRECO_TABELA
    WHERE MESSAGE = :OLD.GENERO;
    END IF;
  IF UPDATING THE 
    UPDATE TEMP SET COL1 = COL1 - 1, COL2 = COL2 - :OLD.PRECO_TABELA
    WHERE MESSAGE = :OLD.GENERO;
    UPDATE TEMP SET COL1 = COL1 +1, COL2 = COL2 + :NEW.PRECO_TABELA
    WHERE MESSAGE  = :NEW.GENERO;
  END IF;
END;
/
-- Exercicio 7
CREATE TRIGGER F04_EX07
  BEFORE DELETE
  ON AUTORES
  FOR EACH ROW
DECLARE
BEGIN
  DELETE FROM LIVROS WHERE CODIGO_AUTOR = :OLD.CODIGO_AUTOR;
END;
/

-- Exercicio 8
